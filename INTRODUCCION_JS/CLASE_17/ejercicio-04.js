/* Ejercicio 4: Transformaci√≥n y An√°lisis de Cadenas
Pide al usuario que ingrese una lista de nombres separados por comas. Los nombres a ingresar deben ser ‚ÄúJulian‚Äù, ‚ÄúMaria‚Äù, ‚ÄúMalena‚Äù, ‚ÄúAndrea‚Äù, ‚ÄúPablo‚Äù y ‚ÄúPedro‚Äù.
Luego, escribe la funci√≥n ‚ÄútransformarYAnalizarNombres‚Äùque realice las siguientes tareas:
1. Quite los espacios en blanco alrededor de cada nombre.
2. Verifique si existe el nombre "Juan".
3. Reemplace todos los nombres "Mar√≠a" por "Ana".
4. Encuentre el √≠ndice del nombre "Pedro".
5. Devuelva una cadena de nombres en orden alfab√©tico separados por puntos. Investigar el m√©todo ‚Äú.sort()‚Äù
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort/*  */ 

const prompt = require("prompt-sync")();

// Pedimos al usuario una lista de nombres separados por comas
const entradaUsuario = prompt("üìã Ingres√° una lista de nombres separados por comas (Ej: Julian, Maria, Malena, Andrea, Pablo, Pedro):" );

// Funci√≥n que transforma y analiza los nombres
function transformarYAnalizarNombres(cadena) {
  
    const nombres = cadena.split(",").map(nombre => nombre.trim());   // 1. Separar y quitar espacios alrededor de cada nombre
    const existeJuan = nombres.includes("Juan"); // 2. Verificar si existe el nombre "Juan"
    const nombresReemplazados = nombres.map(nombre => nombre === "Maria" ? "Ana" : nombre); // 3. Reemplazar "Maria" (sin tilde) por "Ana"
    const indicePedro = nombresReemplazados.indexOf("Pedro");  // 4. Encontrar el √≠ndice de "Pedro"
    const nombresOrdenados = [...nombresReemplazados].sort().join(".");  // 5. Orden alfab√©tico y unir con puntos
    
    return {    // Devolver resultados como objeto
        existeJuan,
        indicePedro,
        nombresOrdenados
    };
}

// Ejecutar funci√≥n y mostrar resultados
const resultado = transformarYAnalizarNombres(entradaUsuario);
/* console.log(entradaUsuario)
console.log(nombres) */
console.log("Resultado del an√°lisis de nombres:");
console.log(resultado);
